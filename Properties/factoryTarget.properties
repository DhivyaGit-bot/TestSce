##### iiq.properties #####
#
# (c) Copyright 2008 SailPoint Technologies, Inc., All Rights Reserved.
#
# This file contains configuration settings for IdentityIQ.  For your unique
# environment, you will need to adjust the properties below.
#
# IdentityIQ can either create its own datasource or use a datasource that is
# managed by an application server.  Depending on the type of database being
# used, you will need to do the following:
#
# 1) Uncomment the correct sessionFactory.hibernateProperties.hibernate.dialect
#    and ensure that all other dialects are commented out.
# 2) If using MS SQL Server, also uncomment the quartz properties:
#    scheduler.quartzProperties.org.quartz.jobStore.driverDelegateClass and
#    scheduler.quartzProperties.org.quartz.jobStore.selectWithLockSQL.
#
#
# IDENTITYIQ MANAGED DATASOURCES ONLY
#
# In addition to the steps above, if IdentityIQ is creating its own datasource
# (ie - not using an application server managed datasource), you will need to
# perform the following steps:
#
# 1) Modify dataSource.username and dataSource.password to include the username
#    and password of the database user.  The password may be an encrypted using
#    the "encrypt" command when running "iiq console".
# 2) Configure the dataSource.url to connect to the database, and uncomment the
#    appropriate dataSource.driverClassName.
# 3) Optionally configure other connection pool settings.
#
#
# APPLICATION SERVER MANAGED DATASOURCES ONLY
#
# In addition to the steps above, if IdentityIQ is using an application server
# managed datasource, you will need to perform the following steps:
#
# 1) Configure the datasource in your application server.  This usually involves
#    putting the JDBC driver jar file in a common location and configuring
#    properties for your database connection and pool settings.  Consult the
#    documentation for the application server for more information.  Also,
#    ensure that the JDBC driver jar file is not in the WEB-INF\lib directory
#    of the IdentityIQ web application.
# 2) Change jndiDataSource.jndiName to point to the location in JNDI in which
#    the datasource is stored.
# 3) Change configuredDataSource.targetBeanName to "jndiDataSource".
#    7.1 update: at the moment targetBeanName doesn't work after the Spring upgrade
#    you must edit the <alias> definition in configBeans.xml
#
